println("Problem not yet implemented..............")
~void SieveOfEratosthenes(int n)
{
    // Create a boolean array "prime[0..n]" and initialize
    // all entries it as true. A value in prime[i] will
    // finally be false if i is Not a prime, else true.
    bool prime[n+1];
    memset(prime, true, sizeof(prime));
 
    for (int p=2; p*p<=n; p++)
    {
        // If prime[p] is not changed, then it is a prime
        if (prime[p] == true)
        {
            // Update all multiples of p
            for (int i=p*2; i<=n; i += p)
                prime[i] = false;
        }
    }
 
    // Print all prime numbers
    for (int p=2; p<=n; p++)
       if (prime[p])
          cout << p << " ";
}

object a(Array())

maximus func(num){

	max prime = 0
	max p = 2
	while(lessEq(mult(p p) num)) {

		max i = mult(p 2)

		if(eg(a.get(p) 1){

			while(lessEq(i num)) {
       			a.append(i)

        	u = inc(u)
    		}
		}
		inc(p)
	}
}~